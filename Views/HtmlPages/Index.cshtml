@using MarketAnalyticHub.Models.SetupDb
@model PaginatedList<HtmlPage>

@{
    ViewData["Title"] = "Manage HTML Pages";
}

<h1>@ViewData["Title"]</h1>

<div class="row mb-3">
    <div class="col-md-6">
        <form asp-action="Index" method="get" class="form-inline">
            <div class="input-group">
                <input type="text" name="searchString" value="" class="form-control" placeholder="Search by Title or Slug..." />
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        </form>
    </div>
    <div class="col-md-6 text-end">
        <a asp-action="Create" class="btn btn-success">Create New Page</a>
    </div>
</div>

<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Slug)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].UpdatedAt)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Count == 0)
        {
            <tr>
                <td colspan="5" class="text-center">No HTML pages found.</td>
            </tr>
        }
        else
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Title)</td>
                    <td>@Html.DisplayFor(modelItem => item.Slug)</td>
                    <td>@item.CreatedAt.ToString("yyyy-MM-dd")</td>
                    <td>@item.UpdatedAt.ToString("yyyy-MM-dd")</td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">View</a>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</a>
                        <form asp-action="Publish" asp-route-id="@item.Id" method="post" class="d-inline">
                            <button type="submit" class="btn btn-success btn-sm" onclick="return confirm('Are you sure you want to publish this page?');">Publish</button>
                        </form>
                        <a href="@Url.Content($"~/HelpCenter/Pages/{item.Slug}.html")" target="_blank" class="btn btn-info btn-sm">View Published</a>
                        <!-- Preview Button -->
                            <a asp-action="Preview" asp-route-id="@item.Id" class="btn btn-secondary btn-sm" target="_blank">Preview</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<!-- Pagination Controls -->
@if (Model.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" >Previous</a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" >@i</a>
                </li>
            }
            <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)">Next</a>
            </li>
        </ul>
    </nav>
}
