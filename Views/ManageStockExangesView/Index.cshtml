@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@{
    ViewData["Title"] = "Manage Markets";
}

<h2>Manage Stock Exchanges</h2>


<!-- Upload and Messages Section -->
<div class="card p-3 mb-4">
    <div class="d-flex justify-content-between align-items-center">
        <button id="btnAddMarket" class="btn btn-primary">Add New Market</button>
        <form id="importForm" enctype="multipart/form-data" class="d-inline-flex align-items-center">
            <label for="csvFile" class="form-label me-2">Upload CSV File:</label>
            <input type="file" id="csvFile" name="csvFile" accept=".csv" class="form-control form-control-sm me-2" />
            <button type="button" id="btnUpload" class="btn btn-secondary btn-sm">Upload</button>
        </form>
    </div>
</div>
<div id="loadingMessage" class="alert alert-info text-center d-none">Loading...</div>
<div id="message"></div>

<!-- Card View -->
<div id="marketsCards" class="d-flex flex-wrap gap-3 mt-4">
    <!-- Cards populated by JavaScript -->
</div>

<!-- Add/Edit Modal -->
<div class="modal" id="marketModal" tabindex="-1" aria-labelledby="marketModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="marketForm">
                    <input type="hidden" id="marketId" />
                    <div class="mb-3">
                        <label for="marketName" class="form-label">Name:</label>
                        <input type="text" id="marketName" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label for="marketMIC" class="form-label">MIC:</label>
                        <input type="text" id="marketMIC" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label for="marketRegion" class="form-label">Region:</label>
                        <input type="text" id="marketRegion" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label for="marketCity" class="form-label">City:</label>
                        <input type="text" id="marketCity" class="form-control" />
                    </div>
                    <button type="button" id="btnSaveMarket" class="btn btn-primary w-100">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>


<!-- Styles -->
<style>
    .skeleton {
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200% 100%;
        animation: shimmer 1.5s infinite;
    }

    @@keyframes shimmer {
        0%

    {
        background-position: -200% 0;
    }

    100% {
        background-position: 200% 0;
    }

    }

    .market-card {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 15px;
        box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);
        width: 250px;
    }

        .market-card h4 {
            margin: 0;
        }

        .market-card .actions {
            margin-top: 10px;
        }

        .market-card button {
            margin-right: 5px;
        }
</style>

<!-- Page Scripts -->
@section PageScripts {
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const marketsCards = document.getElementById("marketsCards");
            const marketModalElement = document.getElementById("marketModal");
            const marketModal = new bootstrap.Modal(marketModalElement);
            const modalTitle = document.getElementById("modalTitle");
            const marketForm = document.getElementById("marketForm");
            const btnSaveMarket = document.getElementById("btnSaveMarket");
            const btnAddMarket = document.getElementById("btnAddMarket");
            const btnUpload = document.getElementById("btnUpload");
            const csvFileInput = document.getElementById("csvFile");
            const loadingMessage = document.getElementById("loadingMessage");
            const messageElement = document.getElementById("message");

            // Fetch and display markets
            function loadMarkets() {
                marketsCards.innerHTML = `
                    <div class="skeleton" style="width:250px; height:150px;"></div>
                    <div class="skeleton" style="width:250px; height:150px;"></div>
                `;

                fetch("/api/stockextange")
                    .then((response) => response.json())
                    .then((data) => {
                        if (data.length === 0) {
                            marketsCards.innerHTML = '<p>No markets available.</p>';
                            return;
                        }

                          marketsCards.innerHTML = data
                          .map(
                              (market) => `
                              <div class="card market-card card-body">
                                  <h4>${market.stockExchangeName} <box-icon name="building" color="#333"></box-icon></h4>
                                  <p><strong>MIC:</strong> ${market.mic}</p>
                                  <p><strong>Region:</strong> ${market.region}</p>
                                  <p><strong>City:</strong> ${market.city}</p>
                                  <div class="actions">
                                      <button class="btn btn-sm btn-primary btnEdit" data-id="${market.stockExchangeName}">Edit</button>
                                      <button class="btn btn-sm btn-danger btnDelete" data-id="${market.stockExchangeName}">Delete</button>
                                  </div>
                              </div>
                          `
                          )
                          .join("");

                    })
                    .catch(() => {
                        marketsCards.innerHTML = '<p style="color:red;">Error loading markets.</p>';
                    });
            }

            // Add New Market
            btnAddMarket.addEventListener("click", () => {
                modalTitle.textContent = "Add New Market";
                marketForm.reset();
                marketModal.show();
            });

            // Handle Edit Button Click
            marketsCards.addEventListener("click", (event) => {
                if (event.target.classList.contains("btnEdit")) {
                    const id = event.target.getAttribute("data-id");
                    modalTitle.textContent = "Loading...";
                    marketForm.reset();

                    fetch(`/api/stockextange/details/${id}`)
                        .then((response) => response.json())
                        .then((data) => {
                            modalTitle.textContent = "Edit Market";
                            document.getElementById("marketId").value = data.id;
                            document.getElementById("marketName").value = data.stockExchangeName;
                            document.getElementById("marketMIC").value = data.mic;
                            document.getElementById("marketRegion").value = data.region;
                            document.getElementById("marketCity").value = data.city;
                            marketModal.show();
                        })
                        .catch(() => {
                            modalTitle.textContent = "Error fetching market details.";
                        });
                }
            });

            // Save Market (Add/Edit)
            btnSaveMarket.addEventListener("click", () => {
                const market = {
                    id: document.getElementById("marketId").value,
                    stockExchangeName: document.getElementById("marketName").value,
                    mic: document.getElementById("marketMIC").value,
                    region: document.getElementById("marketRegion").value,
                    city: document.getElementById("marketCity").value,
                };

                const method = market.id ? "PUT" : "POST";
                const url = market.id ? `/api/stockextange/edit/${market.id}` : "/api/stockextange/create";

                fetch(url, {
                    method: method,
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(market),
                })
                    .then(() => {
                        marketModal.hide();
                        loadMarkets();
                    })
                    .catch(() => {
                        alert("Error saving market.");
                    });
            });

            // Handle Delete Button Click
            marketsCards.addEventListener("click", (event) => {
                if (event.target.classList.contains("btnDelete")) {
                    const id = event.target.getAttribute("data-id");
                    if (confirm("Are you sure you want to delete this market?")) {
                        fetch(`/api/stockextange/delete/${id}`, { method: "DELETE" })
                            .then(() => loadMarkets())
                            .catch(() => alert("Error deleting market."));
                    }
                }
            });

            // Handle CSV Upload
            btnUpload.addEventListener("click", () => {
                const fileInput = csvFileInput.files[0];

                if (!fileInput) {
                    messageElement.innerHTML = "<p style='color:red;'>Please select a CSV file to upload.</p>";
                    return;
                }

                loadingMessage.classList.remove("d-none");
                messageElement.innerHTML = "";

                const formData = new FormData();
                formData.append("csvFile", fileInput);

                fetch("/api/stockextange/import", {
                    method: "POST",
                    body: formData,
                })
                    .then((response) => response.json())
                    .then((data) => {
                        loadingMessage.classList.add("d-none");
                        messageElement.innerHTML = `<p style="color:green;">${data.successMessage || "File uploaded successfully!"}</p>`;
                        loadMarkets();
                    })
                    .catch(() => {
                        loadingMessage.classList.add("d-none");
                        messageElement.innerHTML = '<p style="color:red;">An error occurred while uploading the file.</p>';
                    });
            });

            // Initial load
            loadMarkets();
        });
    </script>

}
