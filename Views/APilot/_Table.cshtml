@model PaginatedList<MarketAnalyticHub.Models.News.NewsItem>

<!-- News Table -->
<div class="card">
    <h5 class="card-header">News</h5>
    <div class="table-responsive">
        <table class="table" id="newsTable">
            <thead>
                <tr>
                    <th style="width: 10%;">
                        Category
                    </th>
                    <th style="width: 10%;">Sentiment</th>
                    <th style="width: 50%;">Title</th>
                    <th style="width: 20%;">Date
                        <a href="javascript:void(0);" onclick="sortByDate('asc')">▲</a>
                        <a href="javascript:void(0);" onclick="sortByDate('desc')">▼</a>

                    </th>
                    <th style="width: 10%;">Actions</th>
                </tr>
            </thead>
            <tbody class="table-border-bottom-0">
                @foreach (var news in Model)
                {
                    <tr id="row-@news.Id">
                        <td>
                            <i class="bx bx-news bx-sm text-primary me-3"></i>
                            <span class="fw-medium category-display">@news.Category</span>
                        </td>
                        <td id="newsSentiment-@news.Id">
                            <span class="stars">@news.Sentiment</span>
                            <span class="fw-bold sentiment-label" data-sentiment="@news.Sentiment"></span>
                        </td>
                        <td>
                            <div class="title-container">
                                <span class="title-display" data-bs-toggle="collapse" data-bs-target="#desc-@news.Id" aria-expanded="false" aria-controls="desc-@news.Id">
                                    <i class="bx bx-chevron-down toggle-icon"></i> @news.Title
                                </span>
                            </div>
                        </td>
                        <td>
                            <span class="date-display">@news.Date</span>
                        </td>
                        <td>
                            <div class="dropdown">
                                <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                    <i class="bx bx-dots-vertical-rounded"></i>
                                </button>
                                <div class="dropdown-menu">
                                    <a class="dropdown-item edit-btn" href="javascript:void(0);" onclick="editRow(@news.Id)">
                                        <i class="bx bx-edit-alt me-1"></i> Edit
                                    </a>
                                    <a class="dropdown-item" href="javascript:void(0);" onclick="deleteNews(@news.Id)">
                                        <i class="bx bx-trash me-1"></i> Delete
                                    </a>
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr class="collapse text-wrap" id="desc-@news.Id">
                        <td colspan="5">
                            <div class="card mb-2">
                                <div class="card-header">
                                    <h3 class="text-wrap card-title">@news.Title</h3>
                                </div>
                                <div class="card-body">
                                    <p class="text-wrap card-text">@news.Description</p>
                                </div>
                                <div class="card-footer">
                                    <span class="text-wrap  link-display">
                                        <a href="@news.Link" target="_blank">@news.Link</a>
                                    </span>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div class="card">
    <h5 class="card-header">Pagination</h5>

    <!-- Pagination Controls -->
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("News", new { pageNumber = Model.PageIndex - 1, pageSize = ViewBag.PageSize, searchQuery = ViewBag.SearchQuery, category = ViewBag.Category, sortOrder = ViewBag.SortOrder, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })">Previous</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Previous</span>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                if (i == Model.PageIndex)
                {
                    <li class="page-item active" aria-current="page">
                        <span class="page-link">@i</span>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("News", new { pageNumber = i, pageSize = ViewBag.PageSize, searchQuery = ViewBag.SearchQuery, category = ViewBag.Category, sortOrder = ViewBag.SortOrder, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })">@i</a>
                    </li>
                }
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("News", new { pageNumber = Model.PageIndex + 1, pageSize = ViewBag.PageSize, searchQuery = ViewBag.SearchQuery, category = ViewBag.Category, sortOrder = ViewBag.SortOrder, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })">Next</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Next</span>
                </li>
            }
            <li class="page-item">
                <div class="mb-4" style="margin-left: 1rem;">
                    <select id="pageSizeSelect" class="form-select" onchange="setPageSize()">
                        <option value="50">50</option>
                        <option value="100">100</option>
                        <option value="200">200</option>
                    </select>
                </div>
            </li>
        </ul>
    </nav>
</div>

<style>
    .title-container {
        max-width: 300px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
    @@media (max-width: 768px) {
        .title-container {
            max-width: 150px;
        }
    }
    .dropdown-menu a {
        display: flex;
        align-items: center;
    }
    .dropdown-menu i {
        margin-right: 5px;
    }
</style>
<script>
    function applyFilters() {
        var category = document.getElementById('categorySelect').value;
        var startDate = document.getElementById('startDate').value;
        var endDate = document.getElementById('endDate').value;
        var pageSize = document.getElementById('pageSizeSelect').value;

        var url = `@Url.Action("News", "APilot")?category=${category}&startDate=${startDate}&endDate=${endDate}&pageSize=${pageSize}`;
        window.location.href = url;
    }

    function setPageSize() {
        var pageSize = document.getElementById('pageSizeSelect').value;
        var category = document.getElementById('categorySelect').value;
        var startDate = document.getElementById('startDate').value;
        var endDate = document.getElementById('endDate').value;
        var url = `@Url.Action("News", "APilot")?pageSize=${pageSize}&category=${category}&startDate=${startDate}&endDate=${endDate}`;
        window.location.href = url;
    }

    function sortByDate(order) {
        var category = document.getElementById('categorySelect').value;
        var startDate = document.getElementById('startDate').value;
        var endDate = document.getElementById('endDate').value;
        var pageSize = document.getElementById('pageSizeSelect').value;
        var url = `@Url.Action("News", "APilot")?sortOrder=${order}&category=${category}&startDate=${startDate}&endDate=${endDate}&pageSize=${pageSize}`;
        window.location.href = url;
    }
    
    function getStars(sentiment) {
        const maxStars = 5;
        const rating = Math.round((sentiment + 1) / 2 * maxStars);
        let stars = '';
        const starColor = sentiment >= 0 ? 'gold' : 'red';

        for (let i = 0; i < maxStars; i++) {
            stars += i < rating ? `<span style="color:${starColor};">★</span>` : '☆';
        }

        return stars;
    }

    function getSentimentLabel(sentiment) {
        return sentiment >= 0 ? 'Positive' : 'Negative';
    }

    function getSentimentColor(sentiment) {
        return sentiment >= 0 ? 'success' : 'danger';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const urlParams = new URLSearchParams(window.location.search);
        document.getElementById('categorySelect').value = urlParams.get('category') || '';
        document.getElementById('startDate').value = urlParams.get('startDate') || '';
        document.getElementById('endDate').value = urlParams.get('endDate') || '';
        document.getElementById('pageSizeSelect').value = urlParams.get('pageSize') || '50';

       

        document.querySelectorAll('.stars').forEach(function (element) {
            let sentimentText = element.innerText.trim().replace(',', '.');
            const sentiment = parseFloat(sentimentText);
            if (!isNaN(sentiment)) {
                element.innerHTML = getStars(sentiment);
            } else {
                console.error(`Invalid sentiment value: ${sentimentText}`);
            }
        });

        document.querySelectorAll('.sentiment-label').forEach(function (element) {
            const sentiment = parseFloat(element.getAttribute('data-sentiment'));
            if (!isNaN(sentiment)) {
                element.classList.add(`text-${getSentimentColor(sentiment)}`);
                element.innerText = getSentimentLabel(sentiment);
            } else {
                console.error(`Invalid sentiment value: ${sentiment}`);
            }
        });
    });

    function editRow(id) {
        fetch(`/news/get/${id}`)
            .then(response => response.json())
            .then(data => {
                document.getElementById('editNewsId').value = data.id;
                document.getElementById('editNewsCategory').value = data.category;
                document.getElementById('editNewsTitle').value = data.title;
                document.getElementById('editNewsDescription').value = data.description;
                document.getElementById('editNewsLink').value = data.link;
                document.getElementById('editNewsDate').value = new Date(data.date).toISOString().substring(0, 10);

                var editNewsModal = new bootstrap.Modal(document.getElementById('editNewsModal'));
                editNewsModal.show();
            })
            .catch(error => console.error('Error fetching news item:', error));
    }

    function handleKeyPress(event) {
        if (event.key === 'Enter') {
            searchNews();
        }
    }

    function searchNews() {
        var searchQuery = document.getElementById("searchInput").value;
        var url = new URL(window.location.href);
        url.searchParams.set('searchQuery', searchQuery);
        window.location.href = url.toString();
    }

    function saveNews() {
        const id = document.getElementById('editNewsId').value;
        const category = document.getElementById('editNewsCategory').value;
        const title = document.getElementById('editNewsTitle').value;
        const description = document.getElementById('editNewsDescription').value;
        const link = document.getElementById('editNewsLink').value;
        const date = document.getElementById('editNewsDate').value;

        const updatedNews = {
            id,
            category,
            title,
            description,
            link,
            date
        };

        fetch(`/news/update/${id}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(updatedNews)
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('News item updated successfully');
                    location.reload();
                } else {
                    alert('Error updating news item: ' + data.message);
                }
            })
            .catch(error => console.error('Error updating news item:', error));
    }

    function deleteNews(id) {
        if (confirm('Are you sure you want to delete this news item?')) {
            fetch(`/news/delete/${id}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('News item deleted successfully');
                        location.reload();
                    } else {
                        alert('Error deleting news item: ' + data.message);
                    }
                })
                .catch(error => console.error('Error deleting news item:', error));
        }
    }
</script>
