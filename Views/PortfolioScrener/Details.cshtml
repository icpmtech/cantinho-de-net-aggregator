@model MarketAnalyticHub.Models.ScreenerViewModel
@using System.Linq
@using Newtonsoft.Json

@{
    ViewBag.Title = "Portfolio Stock Screener Details";
}

<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

<div class="container my-4">
    <h1 class="text-center mb-4">Stock Market Dashboard</h1>

    <!-- Company Summary -->
    @Html.Partial("Detail_CompanySummary")

    <!-- Main Stock Information -->
    <div class="row">
        <div class="col-md-4">
            <!-- Sidebar Tabs -->
            @Html.Partial("Detail/_Tabs")
        </div>
        <div class="col-md-8">
            <!-- Tab Content -->
            @Html.Partial("Detail_TabContents")
        </div>
    </div>
</div>


    <!-- Bootstrap Bundle (JS) -->
    <script>
        // Example stock symbol
        const stockSymbol = "SON.LS";

        // Mock data for fallback
        const mockStockData = {
            shortName: "Sonae SGPS",
            longName: "Sonae SGPS S.A.",
            sector: "Retail",
            industry: "Consumer Goods",
            regularMarketPrice: 0.942,
            currency: "EUR",
            regularMarketChange: 0.003,
            regularMarketChangePercent: 0.32,
            marketCap: "3.4B EUR",
            peRatio: 15.8,
        eps: 0.35,
        technicalSignals: { RSI: 70, MACD: 80, MovingAverage: 60 },
        analystRatings: { Buy: 60, Hold: 30, Sell: 10 },
            dividendYield: "2.5%",
            dividends: [
                { date: "2024-11-15", exDate: "2024-11-10", amount: "0.10 EUR" },
                { date: "2024-08-15", exDate: "2024-08-10", amount: "0.12 EUR" },
            ],
            news: [
                { title: "Sonae Reports Q3 Results", url: "#" },
                { title: "Sonae Announces Dividend Increase", url: "#" },
            ],
            chartData: [0.94, 0.95, 0.942, 0.938, 0.94, 0.945, 0.94],
        };

        // Function to display company summary
        function renderCompanySummary(data) {
            const summaryDiv = document.getElementById("companySummary");
            summaryDiv.innerHTML = `
                <p><strong>Company:</strong> ${data.longName}</p>
                <p><strong>Sector:</strong> ${data.sector}</p>
                <p><strong>Industry:</strong> ${data.industry}</p>
                <p><strong>Market Cap:</strong> ${data.marketCap}</p>
            `;
        }

        // Function to display chart
        function renderChart(data) {
            const options = {
                series: [{ name: "Price", data: data }],
                chart: {
                    type: "line",
                    height: 300,
                },
                xaxis: {
                    categories: ["Day 1", "Day 2", "Day 3", "Day 4", "Day 5", "Day 6", "Day 7"],
                },
            };

            const chart = new ApexCharts(document.querySelector("#chartContainer"), options);
            chart.render();
        }

        // Function to display news
        function renderNews(news) {
            const newsList = document.getElementById("newsList");
            newsList.innerHTML = ""; // Clear existing items

            news.forEach(item => {
                const listItem = document.createElement("li");
                listItem.classList.add("list-group-item");
                listItem.innerHTML = `<a href="${item.url}" target="_blank">${item.title}</a>`;
                newsList.appendChild(listItem);
            });
        }

        // Function to display details
        function renderDetails(data) {
            const detailsTable = document.getElementById("detailsTable");
            detailsTable.innerHTML = `
                <tr><th>Symbol</th><td>${stockSymbol}</td></tr>
                <tr><th>Name</th><td>${data.shortName}</td></tr>
                <tr><th>Price</th><td>${data.regularMarketPrice} ${data.currency}</td></tr>
                <tr><th>Change</th><td>${data.regularMarketChange} (${data.regularMarketChangePercent}%)</td></tr>
            `;
        }

        // Function to display fundamentals
        function renderFundamentals(data) {
            const fundamentalsTable = document.getElementById("fundamentalsTable");
            fundamentalsTable.innerHTML = `
                <tr><th>P/E Ratio</th><td>${data.peRatio}</td></tr>
                <tr><th>EPS</th><td>${data.eps}</td></tr>
                <tr><th>Dividend Yield</th><td>${data.dividendYield}</td></tr>
                <tr><th>Market Cap</th><td>${data.marketCap}</td></tr>
            `;
        }

        // Function to display dividends
        function renderDividends(data) {
            const dividendsTable = document.getElementById("dividendsTable");
            dividendsTable.innerHTML = ""; // Clear existing data

            if (data.dividends && data.dividends.length > 0) {
                data.dividends.forEach(dividend => {
                    const row = document.createElement("tr");
                    row.innerHTML = `
                        <td>${dividend.date}</td>
                        <td>${dividend.exDate}</td>
                        <td>${dividend.amount}</td>
                    `;
                    dividendsTable.appendChild(row);
                });
            } else {
                const noDataRow = document.createElement("tr");
                noDataRow.innerHTML = `<td colspan="3">No dividend data available.</td>`;
                dividendsTable.appendChild(noDataRow);
            }
        }
       function renderTechnicalSignals(data) {
        const options = {
            series: [{
                name: "Score",
                data: Object.values(data),
            }],
            chart: {
                type: "bar",
                height: 300,
            },
            xaxis: {
                categories: Object.keys(data),
            },
            title: {
                text: "Technical Signals",
            },
        };

        const chart = new ApexCharts(document.querySelector("#technicalSignalsChart"), options);
        chart.render();
    }

    function renderAnalystSignals(data) {
        const options = {
            series: Object.values(data),
            labels: Object.keys(data),
            chart: {
                type: "pie",
                height: 300,
            },
            title: {
                text: "Analyst Ratings",
            },
        };

        const chart = new ApexCharts(document.querySelector("#analystSignalsChart"), options);
        chart.render();
    }

        // Initialize Dashboard
        function initializeDashboard() {
           renderTechnicalSignals(mockStockData.technicalSignals);
            renderAnalystSignals(mockStockData.analystRatings);
            renderCompanySummary(mockStockData);
            renderChart(mockStockData.chartData);
            renderNews(mockStockData.news);
            renderDetails(mockStockData);
            renderFundamentals(mockStockData);
            renderDividends(mockStockData);
        }

        initializeDashboard();
    </script>

