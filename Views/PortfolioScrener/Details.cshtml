@model MarketAnalyticHub.Models.DetailScreenerViewModel
@using System.Linq
@using Newtonsoft.Json

@{
    ViewBag.Title = "Portfolio Stock Screener Details";
}

<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

<div class="container my-4">
    <h1 class="text-center mb-4">Stock Market Dashboard</h1>

    <!-- Company Summary Card -->
    <div class="card mb-4">
        <div class="card-body">
            <h5 class="card-title">
                <i class="bi bi-building"></i> Company Summary
            </h5>
            <div id="companySummary">
                <h6>Loading...</h6>
            </div>
        </div>
    </div>

    <!-- Main Stock Information -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">
                        <i class="bi bi-bar-chart-line"></i> Stock Information
                    </h5>
                    <ul class="nav nav-tabs" id="stockTabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="chart-tab" data-bs-toggle="tab" data-bs-target="#chart" type="button" role="tab">
                                Chart
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="news-tab" data-bs-toggle="tab" data-bs-target="#news" type="button" role="tab">
                                News
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="details-tab" data-bs-toggle="tab" data-bs-target="#details" type="button" role="tab">
                                Details
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="fundamentals-tab" data-bs-toggle="tab" data-bs-target="#fundamentals" type="button" role="tab">
                                Fundamentals
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="dividends-tab" data-bs-toggle="tab" data-bs-target="#dividends" type="button" role="tab">
                                Dividends
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="signals-tab" data-bs-toggle="tab" data-bs-target="#signals" type="button" role="tab">
                                Signals
                            </button>
                        </li>
                    </ul>
                    <div class="tab-content mt-3" id="stockTabContent">
                        <!-- Chart Tab -->
                        <div class="tab-pane fade show active" id="chart" role="tabpanel">
                            <div id="chartContainer"></div>
                        </div>
                        <!-- News Tab -->
                        <div class="tab-pane fade" id="news" role="tabpanel">
                            <ul id="newsList" class="list-group">
                                <li class="list-group-item">No news available.</li>
                            </ul>
                        </div>
                        <!-- Details Tab -->
                        <div class="tab-pane fade" id="details" role="tabpanel">
                            <table class="table">
                                <tbody id="detailsTable">
                                    <tr><th>Symbol</th><td>N/A</td></tr>
                                    <tr><th>Price</th><td>N/A</td></tr>
                                    <tr><th>Change</th><td>N/A</td></tr>
                                    <tr><th>Currency</th><td>N/A</td></tr>
                                </tbody>
                            </table>
                        </div>
                        <!-- Fundamentals Tab -->
                        <div class="tab-pane fade" id="fundamentals" role="tabpanel">
                            <table class="table">
                                <tbody id="fundamentalsTable">
                                    <tr><th>P/E Ratio</th><td>N/A</td></tr>
                                    <tr><th>EPS</th><td>N/A</td></tr>
                                    <tr><th>Dividend Yield</th><td>N/A</td></tr>
                                    <tr><th>Market Cap</th><td>N/A</td></tr>
                                </tbody>
                            </table>
                        </div>
                        <!-- Dividends Tab -->
                        <div class="tab-pane fade" id="dividends" role="tabpanel">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>Ex-Dividend Date</th>
                                        <th>Amount</th>
                                    </tr>
                                </thead>
                                <tbody id="dividendsTable">
                                    <tr>
                                        <td colspan="3">No dividend data available.</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <!-- Signals Tab -->
                        <div class="tab-pane fade" id="signals" role="tabpanel">
                            <div id="technicalSignalsChart" style="height: 300px;"></div>
                            <div id="analystSignalsChart" style="height: 300px; margin-top: 20px;"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    // Example stock symbol
    const stockSymbol = "SON.LS";

    // Base API endpoint
    const apiEndpoint = "/api/stockfinance/search-finance";

    // Fetch data from API
    async function fetchStockData(symbol) {
        try {
            const response = await fetch(`${apiEndpoint}?symbol=${symbol}`);
            if (!response.ok) {
                throw new Error(`API call failed with status: ${response.status}`);
            }
            return await response.json();
        } catch (error) {
            console.error("Error fetching stock data:", error);
            return null; // Fallback to handle errors
        }
    }

    // Function to display company summary
    function renderCompanySummary(data) {
        const summaryDiv = document.getElementById("companySummary");
        summaryDiv.innerHTML = `
            <p><strong>CEO:</strong> ${data.ceo}</p>
            <p><strong>Company:</strong> ${data.companyName}</p>
            <p><strong>Sector:</strong> ${data.sector}</p>
            <p><strong>Industry:</strong> ${data.industry}</p>
            <p><strong>Market Cap:</strong> ${data.marketCap}</p>
        `;
    }

    // Function to display chart
    function renderChart(data) {
        const options = {
            series: [{ name: "Price", data: data }],
            chart: {
                type: "line",
                height: 300,
            },
            xaxis: {
                categories: ["Day 1", "Day 2", "Day 3", "Day 4", "Day 5", "Day 6", "Day 7"],
            },
        };

        const chart = new ApexCharts(document.querySelector("#chartContainer"), options);
        chart.render();
    }

    // Function to display news
    function renderNews(news) {
        const newsList = document.getElementById("newsList");
        newsList.innerHTML = ""; // Clear existing items

        news.forEach(item => {
            const listItem = document.createElement("li");
            listItem.classList.add("list-group-item");
            listItem.innerHTML = `<a href="${item.url}" target="_blank">${item.title}</a>`;
            newsList.appendChild(listItem);
        });
    }

    // Function to display details
    function renderDetails(data) {
        const detailsTable = document.getElementById("detailsTable");
        detailsTable.innerHTML = `
            <tr><th>Symbol</th><td>${stockSymbol}</td></tr>
            <tr><th>CEO</th><td>${data.ceo}</td></tr>
             <tr><th>Name</th><td>${data.companyName}</td></tr>
            <tr><th>Price</th><td>${data.regularMarketPrice} ${data.currency}</td></tr>
            <tr><th>Change</th><td>${data.regularMarketChange} (${data.regularMarketChangePercent}%)</td></tr>
        `;
    }

    // Function to display fundamentals
    function renderFundamentals(data) {
        const fundamentalsTable = document.getElementById("fundamentalsTable");
        fundamentalsTable.innerHTML = `
            <tr><th>P/E Ratio</th><td>${data.peRatio}</td></tr>
            <tr><th>EPS</th><td>${data.eps}</td></tr>
            <tr><th>Dividend Yield</th><td>${data.dividendYield}</td></tr>
            <tr><th>Market Cap</th><td>${data.marketCap}</td></tr>
        `;
    }

    // Function to display dividends
    function renderDividends(data) {
        const dividendsTable = document.getElementById("dividendsTable");
        dividendsTable.innerHTML = ""; // Clear existing data

        if (data.dividends && data.dividends.length > 0) {
            data.dividends.forEach(dividend => {
                const row = document.createElement("tr");
                row.innerHTML = `
                    <td>${dividend.date}</td>
                    <td>${dividend.exDate}</td>
                    <td>${dividend.amount}</td>
                `;
                dividendsTable.appendChild(row);
            });
        } else {
            const noDataRow = document.createElement("tr");
            noDataRow.innerHTML = `<td colspan="3">No dividend data available.</td>`;
            dividendsTable.appendChild(noDataRow);
        }
    }

    // Render technical signals
    function renderTechnicalSignals(data) {
        const options = {
            series: [{
                name: "Score",
                data: Object.values(data),
            }],
            chart: {
                type: "bar",
                height: 300,
            },
            xaxis: {
                categories: Object.keys(data),
            },
            title: {
                text: "Technical Signals",
            },
        };

        const chart = new ApexCharts(document.querySelector("#technicalSignalsChart"), options);
        chart.render();
    }

    // Render analyst ratings
    function renderAnalystSignals(data) {
        const options = {
            series: Object.values(data),
            labels: Object.keys(data),
            chart: {
                type: "pie",
                height: 300,
            },
            title: {
                text: "Analyst Ratings",
            },
        };

        const chart = new ApexCharts(document.querySelector("#analystSignalsChart"), options);
        chart.render();
    }

    // Initialize Dashboard
    async function initializeDashboard() {
        const stockDatas = await fetchStockData(stockSymbol);

        if (stockDatas?.stock) {
            renderCompanySummary(stockDatas?.stock);
            renderChart(stockDatas?.stock.chartData);
            renderNews(stockDatas?.stock.news);
            renderDetails(stockDatas?.stock);
            renderFundamentals(stockDatas?.stock);
            renderDividends(stockDatas?.stock);
            renderTechnicalSignals(stockDatas?.stock.technicalSignals);
            renderAnalystSignals(stockDatas?.stock.analystRatings);
        } else {
            console.error("Failed to fetch stock data. Please check the API or fallback to mock data.");
        }
    }

    initializeDashboard();
</script>
