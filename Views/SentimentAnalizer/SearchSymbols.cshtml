<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Ai-Pilot Search Page</title>
  <link href='https://cdn.jsdelivr.net/npm/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
  <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

  <style>
    .container {
      background-color: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    }

    .search-box {
      position: relative;
      margin-bottom: 20px;
      display: flex;
      align-items: center;
    }

    .search-box input[type="text"] {
      width: 100%;
      padding: 10px 10px 10px 40px;
      border: 1px solid #ccc;
      border-radius: 4px;
      font-size: 16px;
    }

    .search-box i {
      position: absolute;
      left: 10px;
      font-size: 20px;
      color: #007bff;
    }

    .suggestions {
      position: absolute;
      top: 45px;
      width: 100%;
      border: 1px solid #ccc;
      border-top: none;
      background-color: #fff;
      z-index: 1000;
      display: none;
    }

    .suggestions .suggestion-item {
      display: flex;
      align-items: center;
      padding: 10px;
      border-bottom: 1px solid #ccc;
      cursor: pointer;
    }

    .suggestions .suggestion-item img {
      width: 40px;
      height: 40px;
      margin-right: 10px;
      border-radius: 50%;
    }

    .suggestions .suggestion-item p {
      margin: 0;
      flex: 1;
    }

    .suggestions .suggestion-item i {
      font-size: 20px;
      color: #007bff;
    }

    .suggestions .suggestion-item:hover {
      background-color: #f0f0f0;
    }

    .result-summary,
    .fundamental-analysis {
      margin-top: 20px;
      padding: 15px;
      border: 1px solid #ccc;
      border-radius: 4px;
      background-color: #f9f9f9;
      display: none;
    }
  </style>

</head>

<body>

  <div class="text-center chat-assistant-logo">
    <img class="rounded-circle" src="~/icons/marketanalytic_hub_icon_72x72.png" alt="Assistant Logo">
    <h3> Ai-Pilot</h3>
    <p> Your everyday AI analyzer companion</p>
  </div>

  <div class="container">

    <h2>Search for Analysis</h2>
    <div class="search-box">
      <i class='bx bx-search'></i>
      <input type="text" id="search-input" placeholder="Search Symbol..." oninput="search()">
      <div class="suggestions" id="suggestions"></div>
    </div>
    <div class="result-summary">
      <div class="card">
        <div class="card-header">
          <img id="result-img" src="" alt="Company Logo">
          <h3 id="result-title">Company Name</h3>
        </div>
        <div class="card-content" id="summary-content">
          This is a summary of the search result...
        </div>
        <div id="sparkline" class="sparkline"></div>
      </div>
    </div>
    <div class="fundamental-analysis">
      <div class="card">
        <div class="card-header">
          <img id="analysis-img" src="" alt="Company Logo">
          <h3 id="analysis-title">Fundamental Analysis</h3>
        </div>
        <div class="card-content" id="analysis-content">
          This is the fundamental analysis content...
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
  <script>
    const OPENAI_API_KEY = '';
    const RAPIDAPI_HOST = 'apidojo-yahoo-finance-v1.p.rapidapi.com';
    const RAPIDAPI_KEY = 'your-rapidapi-key'; // Replace this with your RapidAPI key

    const mockResults = [
      { symbol: 'AAPL', shortname: 'Apple Inc.', img: 'https://via.placeholder.com/40' },
      { symbol: 'MSFT', shortname: 'Microsoft Corporation', img: 'https://via.placeholder.com/40' },
      { symbol: 'GOOGL', shortname: 'Alphabet Inc.', img: 'https://via.placeholder.com/40' },
      { symbol: 'AMZN', shortname: 'Amazon.com, Inc.', img: 'https://via.placeholder.com/40' },
      { symbol: 'TSLA', shortname: 'Tesla, Inc.', img: 'https://via.placeholder.com/40' },
      { symbol: 'FB', shortname: 'Meta Platforms, Inc.', img: 'https://via.placeholder.com/40' }
    ];

    async function search() {
      const query = document.getElementById('search-input').value.toLowerCase();
      const suggestionsBox = document.getElementById('suggestions');
      suggestionsBox.innerHTML = ''; // Clear previous suggestions

      if (query) {
        try {
          const url = `/api/yahoofinance/search/${query}`;
          const response = await fetch(url);

          if (response.ok) {
            const data = await response.json();
            if (data.length > 0) {
              suggestionsBox.style.display = 'block';
              data.forEach(result => {
                const suggestionItem = document.createElement('div');
                suggestionItem.classList.add('suggestion-item');

                // Set placeholder image or use real image if available
                const imageUrl = result.img ? result.img : 'https://via.placeholder.com/40';

                suggestionItem.innerHTML = `
                                            <img src="${imageUrl}" alt="${result.symbol}">
                                            <p>${result.symbol} - ${result.shortname}</p>
                                            <i class='bx bx-right-arrow-alt'></i>
                                        `;

                suggestionItem.onclick = () => selectSuggestion(result);
                suggestionsBox.appendChild(suggestionItem);
              });
            } else {
              suggestionsBox.style.display = 'none';
            }
          } else {
            console.error('Error fetching symbols:', response.statusText);
            suggestionsBox.style.display = 'none';
          }
        } catch (error) {
          console.error('Error fetching symbols:', error);
          suggestionsBox.style.display = 'none';
        }
      } else {
        suggestionsBox.style.display = 'none';
      }
    }

    async function selectSuggestion(result) {
      document.getElementById('search-input').value = result.symbol;
      document.getElementById('suggestions').style.display = 'none';

      document.querySelector('.result-summary').style.display = 'block';
      document.querySelector('.fundamental-analysis').style.display = 'block';

      document.getElementById('result-img').src = result.img ? result.img : 'https://via.placeholder.com/40';
      document.getElementById('result-title').innerText = result.shortname;

      document.getElementById('analysis-img').src = result.img ? result.img : 'https://via.placeholder.com/40';
      document.getElementById('analysis-title').innerText = 'Fundamental Analysis';

      try {
        const summary = await fetchCompanySummary(result.shortname);
        const fundamentals = await fetchFundamentals(result.symbol);
        const sparklineData = await fetchSparklineData(result.symbol);

        document.getElementById('summary-content').innerText = summary || 'Summary not available.';
        document.getElementById('analysis-content').innerText = formatFundamentals(fundamentals);

        renderSparkline(sparklineData);
      } catch (error) {
        document.getElementById('summary-content').innerText = 'Error fetching summary.';
        document.getElementById('analysis-content').innerText = 'Error fetching analysis.';
      }
    }

    async function fetchCompanySummary(companyName) {
            const url = `/api/llm/search-company-summary/${companyName}`;
    
      try {
        const response = await fetch(url, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data)
        });

        if (response.ok) {
          const result = await response.json();
          return result;
        } else {
          console.error('Error fetching summary:', response.statusText);
          return 'Summary not available.';
        }
      } catch (error) {
        console.error('Error fetching summary:', error);
        return 'Summary not available.';
      }
    }
    async function fetchSparklineData(symbol) {
      try {
        const url = `/api/yahoofinance/price/${symbol}`;
        const response = await fetch(url);

        if (response.ok) {
          const data = await response.json();
          return data; // Adjust this based on what data is returned
        } else {
          console.error('Error fetching sparkline data:', response.statusText);
          return [];
        }
      } catch (error) {
        console.error('Error fetching sparkline data:', error);
        return [];
      }
    }
    async function fetchFundamentals(symbol) {
      try {
        const url = `/api/yahoofinance/balance-sheet/${symbol}`;
        const response = await fetch(url);

        if (response.ok) {
          const data = await response.json();
          return data;
        } else {
          console.error('Error fetching fundamentals:', response.statusText);
          return null;
        }
      } catch (error) {
        console.error('Error fetching fundamentals:', error);
        return null;
      }
    }
    function formatFundamentals(fundamentals) {
      if (!fundamentals) return 'Fundamental data not available.';

      const marketCap = fundamentals.marketCap ? fundamentals.marketCap.fmt : 'N/A';
      const peRatio = fundamentals.peRatio ? fundamentals.peRatio.fmt : 'N/A';
      const dividendYield = fundamentals.dividendYield ? fundamentals.dividendYield.fmt : 'N/A';

      return `Market Cap: ${marketCap}\nP/E Ratio: ${peRatio}\nDividend Yield: ${dividendYield}`;
    }


    function renderSparkline(data) {
      const options = {
        series: [{
          name: 'Price',
          data: data
        }],
        chart: {
          type: 'line',
          height: 50,
          sparkline: {
            enabled: true
          }
        },
        stroke: {
          curve: 'smooth',
          width: 2
        },
        colors: ['#007bff'],
        tooltip: {
          enabled: false
        }
      };

      const chart = new ApexCharts(document.querySelector("#sparkline"), options);
      chart.render();
    }


  </script>

</body>

</html>
