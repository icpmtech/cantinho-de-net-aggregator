<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ai-Pilot Search Page</title>
    <link href='https://cdn.jsdelivr.net/npm/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

    <style>
        .container {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        }

        .search-box {
            position: relative;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
        }

        .search-box input[type="text"] {
            width: 100%;
            padding: 10px 10px 10px 40px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 16px;
        }

        .search-box i {
            position: absolute;
            left: 10px;
            font-size: 20px;
            color: #007bff;
        }

        .suggestions {
            position: absolute;
            top: 45px;
            width: 100%;
            border: 1px solid #ccc;
            border-top: none;
            background-color: #fff;
            z-index: 1000;
            display: none;
        }

        .suggestions .suggestion-item {
            display: flex;
            align-items: center;
            padding: 10px;
            border-bottom: 1px solid #ccc;
            cursor: pointer;
        }

        .suggestions .suggestion-item img {
            width: 40px;
            height: 40px;
            margin-right: 10px;
            border-radius: 50%;
        }

        .suggestions .suggestion-item p {
            margin: 0;
            flex: 1;
        }

        .suggestions .suggestion-item i {
            font-size: 20px;
            color: #007bff;
        }

        .suggestions .suggestion-item:hover {
            background-color: #f0f0f0;
        }

        .date-range {
            margin-bottom: 20px;
            display: none;
            align-items: center;
            gap: 10px;
        }

        .date-range input[type="date"] {
            padding: 5px;
            font-size: 16px;
        }

        .date-range button {
            padding: 6px 12px;
            font-size: 16px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .date-range button:hover {
            background-color: #0056b3;
        }

        .result-summary,
        .fundamental-analysis {
            margin-top: 20px;
            padding: 15px;
            border: 1px solid #ccc;
            border-radius: 4px;
            background-color: #f9f9f9;
            display: none;
        }

        .customer-analysis {
            margin-top: 20px;
            padding: 15px;
            border: 1px solid #ccc;
            border-radius: 4px;
            background-color: #f9f9f9;
            display: none;
        }

        .finance-card {
            background-color: #fff;
            padding: 20px;
        }

        .finance-card h2 {
            font-size: 1.5em;
            margin-bottom: 20px;
            color: #333;
            text-align: center;
        }

        .finance-card ul {
            list-style: none;
            padding: 0;
        }

        .finance-card ul li {
            display: flex;
            justify-content: space-between;
            padding: 5px 0;
            border-bottom: 1px solid #ddd;
        }

        .finance-card ul li:last-child {
            border-bottom: none;
        }

        .finance-card ul li span {
            font-weight: bold;
        }

        /* Spinner */
        .spinner {
            display: none;
            width: 50px;
            height: 50px;
            border: 8px solid #f3f3f3;
            border-top: 8px solid #007bff;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 20px auto;
        }

        @@keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        .ai-analysis-btn {
            padding: 10px 15px;
            font-size: 16px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
            margin-top: 20px;
        }

        .ai-analysis-btn i {
            font-size: 20px;
        }

        .ai-analysis-btn:hover {
            background-color: #0056b3;
        }
    </style>

</head>

<body>

    <div class="text-center chat-assistant-logo">
        <img class="rounded-circle" src="~/icons/marketanalytic_hub_icon_72x72.png" alt="Assistant Logo">
        <h3> Ai-Pilot</h3>
        <p> Your everyday AI analyzer companion</p>
    </div>

    <div class="container">
        <div class="search-box">
            <i class='bx bx-search'></i>
            <input type="text" id="search-input" placeholder="Search Symbol..." oninput="search()">
            <div class="suggestions" id="suggestions"></div>
        </div>

        <!-- Spinner -->
        <div class="spinner" id="spinner"></div>

        <!-- Date Range Selection -->
        <div class="col-12 col-md-6 mb-2 mb-md-0">
            <div class="date-range" id="date-range">
                <label for="start-date">Start Date:</label>
                <input type="date" id="start-date">
                <label for="end-date">End Date:</label>
                <input type="date" id="end-date">
                <button onclick="updateChart()">Update Chart</button>
            </div>
        </div>
        <div class="result-summary">
            <div class="card">
                <div class="card-header">
                    <img id="result-img" src="" alt="Company Logo">
                    <h3 id="result-title">Company Name</h3>
                </div>
                <div class="card-body" id="summary-content">
                    This is a summary of the search result...
                </div>
                <div id="sparkline" class="sparkline"></div>
            </div>
        </div>
        @await Html.PartialAsync("_FundamentalAnalysis")
        @await Html.PartialAsync("_AnalisysCustomer360")
       
    </div>

    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <script>
       
       
        async function search() {
            const query = document.getElementById('search-input').value.toLowerCase();
            const suggestionsBox = document.getElementById('suggestions');
            suggestionsBox.innerHTML = ''; // Clear previous suggestions

            if (query) {
                try {
                    const url = `/api/yahoofinance/search/${query}`;
                    const response = await fetch(url);

                    if (response.ok) {
                        const data = await response.json();
                        if (data.length > 0) {
                            suggestionsBox.style.display = 'block';
                            data.forEach(result => {
                                const suggestionItem = document.createElement('div');
                                suggestionItem.classList.add('suggestion-item');

                                // Set placeholder image or use real image if available
                                const imageUrl = result.img ? result.img : 'https://via.placeholder.com/40';

                                suggestionItem.innerHTML = `
                          <img src="${imageUrl}" alt="${result.symbol}">
                          <p>${result.symbol} - ${result.shortname}</p>
                          <i class='bx bx-right-arrow-alt'></i>
                        `;

                                suggestionItem.onclick = () => selectSuggestion(result);
                                suggestionsBox.appendChild(suggestionItem);
                            });
                        } else {
                            suggestionsBox.style.display = 'none';
                        }
                    } else {
                        console.error('Error fetching symbols:', response.statusText);
                        suggestionsBox.style.display = 'none';
                    }
                } catch (error) {
                    console.error('Error fetching symbols:', error);
                    suggestionsBox.style.display = 'none';
                }
            } else {
                suggestionsBox.style.display = 'none';
            }
        }

        async function selectSuggestion(result) {
            document.getElementById('search-input').value = result.symbol;
            document.getElementById('suggestions').style.display = 'none';

            document.querySelector('.result-summary').style.display = 'block';
            document.querySelector('.fundamental-analysis').style.display = 'block';
            document.getElementById('date-range').style.display = 'flex';

            document.getElementById('result-img').src = result.img ? result.img : 'https://via.placeholder.com/40';
            document.getElementById('result-title').innerText = result.shortname;

            document.getElementById('analysis-img').src = result.img ? result.img : 'https://via.placeholder.com/40';
            document.getElementById('analysis-title').innerText = 'Fundamental Analysis';
           
                // Display the customer analysis section
                document.querySelector('.customer-analysis').style.display = 'block';

                // Set image and title
                document.getElementById('customer-analysis-img').src = result.img ? result.img : 'https://via.placeholder.com/40';
                document.getElementById('customer-analysis-title').innerText = 'Customer Analysis';

              
            
            showSpinner(true); // Show spinner

            try {
                const summary = await fetchCompanySummary(result.shortname);
                const fundamentals = await fetchFundamentals(result.symbol);
                const sparklineData = await fetchSparklineData(result.symbol);

                document.getElementById('summary-content').innerText = summary || 'Summary not available.';
                document.getElementById('analysis-content').innerHTML = formatFundamentals(fundamentals);

                renderSparkline(sparklineData);
            } catch (error) {
                document.getElementById('summary-content').innerText = 'Error fetching summary.';
                document.getElementById('analysis-content').innerText = 'Error fetching analysis.';
            } finally {
                showSpinner(false); // Hide spinner
            }

            try {
                customerData = await fetchCustomerData(result.symbol);
              
            } catch (error) {
                document.getElementById('customer-analysis-content').innerText = 'Error fetching customer data.';
            }
            finally {
                showSpinner(false); // Hide spinner
            }
        }

        async function updateChart() {
            const symbol = document.getElementById('search-input').value;
            const startDate = document.getElementById('start-date').value;
            const endDate = document.getElementById('end-date').value;

            if (symbol && startDate && endDate) {
                showSpinner(true); // Show spinner
                try {
                    const sparklineData = await fetchSparklineData(symbol, startDate, endDate);
                    renderSparkline(sparklineData);
                } catch (error) {
                    console.error('Error updating chart:', error);
                } finally {
                    showSpinner(false); // Hide spinner
                }
            } else {
                alert("Please select a valid symbol and date range.");
            }
        }

        function showSpinner(show) {
            const spinner = document.getElementById('spinner');
            if (show) {
                spinner.style.display = 'block';
            } else {
                spinner.style.display = 'none';
            }
        }

       
        async function fetchSparklineData(symbol, startDate = null, endDate = null) {
            try {
                let url = `/api/yahoofinance/chart-symbol/${symbol}`;

                if (startDate && endDate) {
                    url += `?startDate=${startDate}&endDate=${endDate}`;
                }

                const response = await fetch(url);

                if (response.ok) {
                    const data = await response.json();
                    return data; // Adjust this based on what data is returned
                } else {
                    console.error('Error fetching sparkline data:', response.statusText);
                    return [];
                }
            } catch (error) {
                console.error('Error fetching sparkline data:', error);
                return [];
            }
        }

      
        function renderSparkline(data) {
            const holcData = data.map(item => ({
                x: new Date(item.timestamp),
                y: [item.open, item.high, item.low, item.close]
            }));

            const options = {
                series: [{
                    name: 'HOLC',
                    data: holcData
                }],
                chart: {
                    type: 'candlestick',
                    height: 300,
                    sparkline: {
                        enabled: false
                    }
                },
                xaxis: {
                    type: 'datetime'
                },
                yaxis: {
                    tooltip: {
                        enabled: true
                    }
                },
                colors: ['#007bff'],
                tooltip: {
                    enabled: true,
                    theme: 'dark',
                    x: {
                        format: 'dd MMM yyyy HH:mm'
                    }
                },
                plotOptions: {
                    candlestick: {
                        colors: {
                            upward: '#00B746',
                            downward: '#EF403C'
                        }
                    }
                }
            };

            const chart = new ApexCharts(document.querySelector("#sparkline"), options);
            chart.render();
        }

    </script>

</body>

</html>
