@model List<MarketAnalyticHub.Models.Portfolio.Portfolio>

<div class="col-md-12">
    @foreach (var portfolio in Model)
    {
        var groupedStocks = portfolio.Items.GroupBy(s => s.Symbol);
        foreach (var stockGroup in groupedStocks)
        {
            var positiveEventCount = stockGroup.SelectMany(s => s.StockEvents).Count(e => e.Sentiment == "Positive");
            var negativeEventCount = stockGroup.SelectMany(s => s.StockEvents).Count(e => e.Sentiment == "Negative");
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">
                        <i class="fas fa-microchip"></i> @stockGroup.Key Analysis (Total: @stockGroup.SelectMany(s => s.StockEvents).Count()) | Positive: @positiveEventCount | Negative: @negativeEventCount
                    </h5>
                    <button class="btn btn-success btn-toggle" onclick="toggleCollapse('@stockGroup.Key-positive')">
                        <i class="fas fa-arrow-up"></i> Positive Analysis
                    </button>
                    <div id="@stockGroup.Key-positive" class="collapse">
                        @foreach (var stock in stockGroup)
                        {
                            @foreach (var stockEvent in stock.StockEvents.Where(e => e.Sentiment == "Positive"))
                            {
                                <div class="card-text">
                                    <p class="card-text"><i class="fas fa-calendar-day"></i> <strong>Date:</strong> <span>@stockEvent.Date</span></p>
                                    <p class="card-text"><i class="fas fa-chart-line"></i> <strong>Price Change:</strong> <span class="positive">@stockEvent.PriceChange%</span></p>
                                    <p class="card-text"><i class="fas fa-calendar-check"></i> <strong>Events:</strong> <a href="@stockEvent.Source" class="text-success">Link</a></p>
                                    <p class="card-text"><i class="fas fa-smile"></i> <strong>Sentiment:</strong> <span class="positive">@stockEvent.Sentiment</span></p>
                                </div>
                            }
                        }
                    </div>

                    <button class="btn btn-danger btn-toggle" onclick="toggleCollapse('@stockGroup.Key-negative')">
                        <i class="fas fa-arrow-down"></i> Negative Analysis
                    </button>
                    <div id="@stockGroup.Key-negative" class="collapse">
                        @foreach (var stock in stockGroup)
                        {
                            @foreach (var stockEvent in stock.StockEvents.Where(e => e.Sentiment == "Negative"))
                            {
                                <div class="card-text">
                                    <p class="card-text"><i class="fas fa-calendar-day"></i> <strong>Date:</strong> <span>@stockEvent.Date</span></p>
                                    <p class="card-text"><i class="fas fa-chart-line"></i> <strong>Price Change:</strong> <span class="negative">@stockEvent.PriceChange%</span></p>
                                    <p class="card-text"><i class="fas fa-calendar-check"></i> <strong>Events:</strong> <a href="@stockEvent.Source" class="text-danger">Link</a></p>
                                    <p class="card-text"><i class="fas fa-frown"></i> <strong>Sentiment:</strong> <span class="negative">@stockEvent.Sentiment</span></p>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    }
</div>
