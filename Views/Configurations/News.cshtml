@model IEnumerable<AspnetCoreMvcFull.Models.Configurations.News.NewsScrapingItem>

@{
    ViewData["Title"] = "News";
    ViewData["container"] = (ViewData["container"] ?? "container-fluid");
    ViewData["containerNav"] = (ViewData["containerNav"] ?? "container-fluid");
}

<!-- Add News Button -->
<div class="mb-4">
    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addNewsModal" onclick="resetForm()">Add News</button>
</div>
<div class="mb-4">
    <label for="categorySelect" class="form-label">Filter by Category</label>
    <select id="categorySelect" class="form-select" onchange="filterByCategory()">
        <option value="">All Categories</option>
        <!-- Populate options dynamically -->
    </select>
</div>

<!-- News Table -->
<div class="card">
    <h5 class="card-header">News</h5>
    <div class="table-responsive text-nowrap">
        <table class="table">
            <thead>
                <tr>
                    <th>Category</th>
                    <th>Title</th>
                    <th>Short Description</th>
                    <th>Link</th>
                    <th>Date</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody class="table-border-bottom-0">
                @foreach (var news in Model)
                {
                    <tr>
                        <td id="newsCategory-@news.Id"><i class="bx bx-news bx-sm text-primary me-3"></i>@news.Category</td>
                        <td id="newsTitle-@news.Id">@news.Title</td>
                        <td id="newsDescription-@news.Id">@news.Description</td>
                        <td id="newsLink-@news.Id"><a href="@news.Link" target="_blank">@news.Link</a></td>
                        <td id="newsDate-@news.Id">@news.Date</td>
                        <td>
                            <div class="dropdown">
                                <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="bx bx-dots-vertical-rounded"></i></button>
                                <div class="dropdown-menu">
                                    <a class="dropdown-item" href="javascript:void(0);" onclick="editNews(@news.Id)"><i class="bx bx-edit-alt me-1"></i> Edit</a>
                                    <a class="dropdown-item" href="javascript:void(0);" onclick="deleteNews(@news.Id)"><i class="bx bx-trash me-1"></i> Delete</a>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Add/Edit News Modal -->
<div class="modal fade" id="addNewsModal" tabindex="-1" aria-labelledby="addNewsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addNewsModalLabel">Add News</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="newsForm">
                <div class="modal-body">
                    <input type="hidden" id="newsId" name="Id">
                    <div class="mb-3">
                        <label for="newsCategory" class="form-label">Category</label>
                        <select id="newsCategory" name="Category" class="form-select">
                            <option value="Economy">Economy</option>
                            <!-- Populate other options dynamically -->
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="newsTitle" class="form-label">Title</label>
                        <input type="text" class="form-control" id="newsTitle" name="Title" required>
                    </div>
                    <div class="mb-3">
                        <label for="newsDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="newsDescription" name="Description" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="newsLink" class="form-label">Link</label>
                        <input type="url" class="form-control" id="newsLink" name="Link" required>
                    </div>
                    <div class="mb-3">
                        <label for="newsDate" class="form-label">Date</label>
                        <input type="date" class="form-control" id="newsDate" name="Date" required>
                    </div>
                    <div class="mb-3">
                        <label for="templateScraping" class="form-label">Template Scraping</label>
                        <textarea class="form-control" id="templateScraping" name="TemplateScraping" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="titleSelector" class="form-label">Title Selector</label>
                        <input type="text" class="form-control" id="titleSelector" name="TitleSelector" required>
                    </div>
                    <div class="mb-3">
                        <label for="linkSelector" class="form-label">Link Selector</label>
                        <input type="text" class="form-control" id="linkSelector" name="LinkSelector" required>
                    </div>
                    <div class="mb-3">
                        <label for="descriptionSelector" class="form-label">Description Selector</label>
                        <input type="text" class="form-control" id="descriptionSelector" name="DescriptionSelector" required>
                    </div>
                    <div class="mb-3">
                        <label for="authorSelector" class="form-label">Author Selector</label>
                        <input type="text" class="form-control" id="authorSelector" name="AuthorSelector" required>
                    </div>
                    <div class="mb-3">
                        <label for="dateSelector" class="form-label">Date Selector</label>
                        <input type="text" class="form-control" id="dateSelector" name="DateSelector" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button id="saveNewsButton" type="button" class="btn btn-primary">Save News</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section PageScripts {
    <script>
        function filterByCategory() {
            var selectedCategory = document.getElementById("categorySelect").value;
            var url = new URL(window.location.href);
            if (selectedCategory) {
                url.searchParams.set('category', selectedCategory);
            } else {
                url.searchParams.delete('category');
            }
            window.location.href = url.toString();
        }

        function resetForm() {
            document.getElementById('newsForm').reset();
            document.getElementById('newsId').value = '';
            document.getElementById('addNewsModalLabel').innerText = 'Add News';
            document.getElementById('saveNewsButton').onclick = saveNews;
        }

        document.getElementById('saveNewsButton').addEventListener('click', function (event) {
            event.preventDefault();
            saveNews();
        });

        function saveNews() {
            const id = document.getElementById('newsId').value;
            const category = document.getElementById('newsCategory').value;
            const title = document.getElementById('newsTitle').value;
            const description = document.getElementById('newsDescription').value;
            const link = document.getElementById('newsLink').value;
            const date = document.getElementById('newsDate').value;
            const templateScraping = document.getElementById('templateScraping').value;
            const titleSelector = document.getElementById('titleSelector').value;
            const linkSelector = document.getElementById('linkSelector').value;
            const descriptionSelector = document.getElementById('descriptionSelector').value;
            const authorSelector = document.getElementById('authorSelector').value;
            const dateSelector = document.getElementById('dateSelector').value;

            const formData = {
                id: id,
                category: category,
                title: title,
                description: description,
                link: link,
                date: date,
                templateScraping: templateScraping,
                titleSelector: titleSelector,
                linkSelector: linkSelector,
                descriptionSelector: descriptionSelector,
                authorSelector: authorSelector,
                dateSelector: dateSelector
            };

            const url = id ? `/editnews/${id}` : '/addnews';
            const method = id ? 'PUT' : 'POST';

            fetch(url, {
                method: method,
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Success: ' + data.message);
                        const modalElement = document.getElementById('addNewsModal');
                        const modal = bootstrap.Modal.getInstance(modalElement);
                        modal.hide();
                        location.reload();
                    } else {
                        alert('Error: ' + data.message);
                        if (data.errors) {
                            data.errors.forEach(error => console.error('Validation error:', error));
                        }
                    }
                })
                .catch((error) => {
                    console.error('Error:', error);
                });
        }

        function deleteNews(id) {
            if (confirm('Are you sure you want to delete this news item?')) {
                fetch(`/deletenews/${id}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert('Success: ' + data.message);
                            location.reload();
                        } else {
                            alert('Error: ' + data.message);
                        }
                    })
                    .catch((error) => {
                        console.error('Error:', error);
                    });
            }
        }

        function editNews(id) {
            fetch(`/getnews/${id}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const news = data.news;
                        document.getElementById('newsId').value = news.id;
                        document.getElementById('newsCategory').value = news.category;
                        document.getElementById('newsTitle').value = news.title;
                        document.getElementById('newsDescription').value = news.description;
                        document.getElementById('newsLink').value = news.link;
                        document.getElementById('newsDate').value = news.date;
                        document.getElementById('templateScraping').value = news.templateScraping;
                        document.getElementById('titleSelector').value = news.titleSelector;
                        document.getElementById('linkSelector').value = news.linkSelector;
                        document.getElementById('descriptionSelector').value = news.descriptionSelector;
                        document.getElementById('authorSelector').value = news.authorSelector;
                        document.getElementById('dateSelector').value = news.dateSelector;

                        document.getElementById('addNewsModalLabel').innerText = 'Edit News';
                        document.getElementById('saveNewsButton').onclick = saveNews;

                        new bootstrap.Modal(document.getElementById('addNewsModal')).show();
                    } else {
                        alert('Error: ' + data.message);
                    }
                })
                .catch((error) => {
                    console.error('Error:', error);
                });
        }
    </script>
}
