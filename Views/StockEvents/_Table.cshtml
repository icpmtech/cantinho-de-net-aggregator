@model PaginatedList<MarketAnalyticHub.Models.StockEvent>
<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

@if (!Model.Any())
{
    <div class="list-group">
        <div class="list-group-item">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">No Stock Events Available</h5>
                    <p class="card-text">There are no stock events to display at the moment. Please check back later or create a new stock event.</p>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>Event Name</th>
                    <th>Date</th>
                    <th>Impact</th>
                    <th>Sentiment</th>
                    <th>Price</th>
                    <th>Price Change</th>
                    <th>Portfolio Item</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="clickable-row" data-id="@item.Id">
                        <td>@Html.DisplayFor(modelItem => item.EventName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Date)</td>
                        <td>@Html.DisplayFor(modelItem => item.Impact)</td>
                        <td>@Html.DisplayFor(modelItem => item.Sentiment)</td>
                        <td>@Html.DisplayFor(modelItem => item.Price)</td>
                        <td>@Html.DisplayFor(modelItem => item.PriceChange)</td>
                        <td>@Html.DisplayFor(modelItem => item.PortfolioItem.Id)</td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-primary"> <i class="bx bx-edit"></i>Edit</a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info"> <i class="bx bx-info-circle"></i>Details</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger"><i class="bx bx-trash"></i>Delete</a>
                        </td>
                    </tr>
                    <tr class="details-row" id="details-@item.Id">
                        <td colspan="8" class="details-content">
                            <p class="card-text"><strong>Details:</strong> @Html.DisplayFor(modelItem => item.Details)</p>
                            <p class="card-text"><strong>Source:</strong> @Html.DisplayFor(modelItem => item.Source)</p>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="mt-3 d-flex justify-content-between">
        @if (Model.HasPreviousPage)
        {
            <a class="btn btn-secondary" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageSize="@ViewData["CurrentPageSize"]" asp-route-tab="list">Previous</a>
        }
        else
        {
            <span class="btn btn-secondary disabled">Previous</span>
        }

        <span>Page @Model.PageIndex of @Model.TotalPages</span>

        @if (Model.HasNextPage)
        {
            <a class="btn btn-secondary" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageSize="@ViewData["CurrentPageSize"]" asp-route-tab="list">Next</a>
        }
        else
        {
            <span class="btn btn-secondary disabled">Next</span>
        }
    </div>
}
