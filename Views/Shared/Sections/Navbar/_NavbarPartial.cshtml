@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> _userManager

@{
    var user = await _userManager.GetUserAsync(User);
    var avatarUrl = user?.AvatarUrl ?? "/img/avatars/default-avatar.png";
}

@if (ViewData["navbarFull"] != null)
{
    <div class="navbar-brand app-brand demo d-none d-xl-flex py-0 me-4">
        <a asp-controller="Dashboards" asp-action="Index" class="app-brand-link gap-2">
            <span class="app-brand-logo demo">
                @await Html.PartialAsync("../_Partials/_Macros")
            </span>
            <span class="app-brand-text demo menu-text fw-bold">@TempData.Peek("appName")</span>
        </a>
    </div>
}

@if (ViewData["navbarHideToggle"] == null)
{
    <div class="layout-menu-toggle navbar-nav align-items-xl-center me-3 me-xl-0 d-xl-none">
        <a class="nav-item nav-link px-0 me-xl-4" href="javascript:void(0)">
            <i class="bx bx-menu bx-sm"></i>
        </a>
    </div>
}

@if (ViewData["navbarWithOutSearch"] != null)
{
    @await Html.PartialAsync("../_Partials/_AppBar", avatarUrl)
}
else
{
    @await Html.PartialAsync("../_Partials/_SearchBar", avatarUrl)
}

<style>
    .credit-bar-container {
        position: relative;
        background-color: #e9ecef;
        border-radius: 10px;
        overflow: hidden;
        width: 150px;
        height: 20px;
    }

    .credit-bar {
        background-color: #007bff;
        height: 100%;
        transition: width 0.4s ease;
    }

    #creditText {
        font-size: 14px;
        color: #fff;
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        font-weight: bold;
    }

    .notification-dot {
        position: absolute;
        top: 0;
        right: 0;
        height: 8px;
        width: 8px;
        background-color: red;
        border-radius: 50%;
    }

    .shortcuts, .notifications {
        display: none;
        position: absolute;
        top: 60px;
        right: 20px;
        width: 350px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        z-index: 1000;
        padding: 20px;
    }

    .shortcuts {
        width: 300px;
    }

    .shortcuts-header, .notifications-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        font-weight: bold;
    }

    .shortcuts-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 20px;
    }

    .shortcut-item {
        text-align: center;
    }

        .shortcut-item i {
            font-size: 32px;
            color: #6c757d;
            display: block;
            margin-bottom: 10px;
        }

        .shortcut-item span {
            font-weight: 500;
        }

        .shortcut-item small {
            color: #6c757d;
        }

    .shortcuts.show, .notifications.show {
        display: block;
    }

    .shortcut-item a {
        text-decoration: none;
        color: inherit;
        display: block;
    }

        .shortcut-item a:hover {
            color: #007bff;
        }

    .notifications-list {
        max-height: 300px;
        overflow-y: auto;
    }

    .notification-item {
        padding: 15px 20px;
        display: flex;
        align-items: center;
        border-bottom: 1px solid #dee2e6;
        cursor: pointer;
    }

        .notification-item img, .notification-item .icon-placeholder {
            height: 40px;
            width: 40px;
            border-radius: 50%;
            margin-right: 15px;
        }

        .notification-item .icon-placeholder {
            background-color: #f8f9fa;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 20px;
            color: #6c757d;
        }

    .notification-item-content {
        flex-grow: 1;
    }

        .notification-item-content h6 {
            margin: 0;
            font-size: 14px;
            font-weight: bold;
        }

        .notification-item-content p {
            margin: 0;
            font-size: 12px;
            color: #6c757d;
        }

    .notification-time {
        font-size: 12px;
        color: #adb5bd;
        white-space: nowrap;
    }

    .notifications-footer {
        padding: 15px 20px;
        text-align: center;
        border-top: 1px solid #dee2e6;
    }

        .notifications-footer a {
            text-decoration: none;
            color: #fff;
            background-color: #007bff;
            padding: 10px 15px;
            border-radius: 5px;
            display: inline-block;
        }
</style>

<div class="shortcuts mt-1" id="shortcuts-menu">
    <div class="shortcuts-header">
        <span>Shortcuts</span>
        <i class="bx bx-plus-circle"></i>
    </div>
    <div class="shortcuts-grid">
        <div class="shortcut-item">
            <a href="/Portfolio/DividendsCalendar">
                <i class="bx bx-calendar"></i>
                <span>Calendar</span>
                <small>Dividends</small>
            </a>
        </div>
        <div class="shortcut-item">
            <a href="/Search/ChatAiPilot">
                <i class="bx bx-file"></i>
                <span>Ai-Pilot</span>
                <small>App</small>
            </a>
        </div>
        <div class="shortcut-item">
            <a href="/Portfolio">
                <i class="bx bx-user"></i>
                <span>Portfolio</span>
                <small>Manage Portfolio</small>
            </a>
        </div>
        <div class="shortcut-item">
            <a href="/NewsRSS">
                <i class="bx bx-shield"></i>
                <span>RSS Search</span>
                <small>Research</small>
            </a>
        </div>
        <div class="shortcut-item">
            <a href="/Dashboards">
                <i class="bx bx-bar-chart"></i>
                <span>Dashboard</span>
                <small>User Dashboard</small>
            </a>
        </div>
        <div class="shortcut-item">
            <a href="/Pages/AccountSettings">
                <i class="bx bx-cog"></i>
                <span>Setting</span>
                <small>Account Settings</small>
            </a>
        </div>
    </div>
</div>

<div class="notifications mt-1 " id="notifications-menu">
    <div class="notifications-header">
        <span>Notification</span>
        <span>0 New</span> <!-- Initial count is 0, this will be updated dynamically -->
    </div>
    <div class="notifications-list">
        <!-- Dynamic notifications will be prepended here -->
    </div>
    <div class="notifications-footer">
        <a href="#all-notifications">View all notifications</a>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.0/signalr.min.js"></script>
<script type="text/javascript">
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/notificationHub")
        .build();

    connection.on("ReceivePortfolioUpdate", function (message) {
        addNotification("Portfolio Update", message, "1m ago");
    });

    connection.on("ReceiveStockAlert", function (message) {
        addNotification("Stock Alert", message, "Just now");
    });

    connection.on("ReceivePortfolioLossAlert", function (message) {
        addNotification("Stock Alert", message, "Just now");
    });

    connection.start().catch(function (err) {
        return console.error(err.toString());
    });

    function addNotification(title, message, time) {
        const notificationsList = document.querySelector(".notifications-list");

        // Create a new notification item element
        const notificationItem = document.createElement("div");
        notificationItem.classList.add("notification-item");

        const iconPlaceholder = document.createElement("div");
        iconPlaceholder.classList.add("icon-placeholder");
        iconPlaceholder.textContent = title.charAt(0); // First letter of the title

        const contentDiv = document.createElement("div");
        contentDiv.classList.add("notification-item-content");

        const header = document.createElement("h6");
        header.textContent = title;

        const messageParagraph = document.createElement("p");
        messageParagraph.textContent = message;

        contentDiv.appendChild(header);
        contentDiv.appendChild(messageParagraph);

        const timeDiv = document.createElement("div");
        timeDiv.classList.add("notification-time");
        timeDiv.textContent = time;

        notificationItem.appendChild(iconPlaceholder);
        notificationItem.appendChild(contentDiv);
        notificationItem.appendChild(timeDiv);

        // Prepend the new notification to the list
        notificationsList.prepend(notificationItem);

        // Update the notification count
        updateNotificationCount();
    }

    function updateNotificationCount() {
        const notificationsHeader = document.querySelector(".notifications-header span:nth-child(2)");
        const notificationItems = document.querySelectorAll(".notifications-list .notification-item");
        notificationsHeader.textContent = `${notificationItems.length} New`;
    }
</script>

<script>
    document.getElementById("app-icon").addEventListener("click", function () {
        var shortcutsMenu = document.getElementById("shortcuts-menu");
        var notificationsMenu = document.getElementById("notifications-menu");
        notificationsMenu.classList.remove("show");  // Hide notifications when showing shortcuts
        shortcutsMenu.classList.toggle("show");
    });

    document.getElementById("notification-icon").addEventListener("click", function () {
        var shortcutsMenu = document.getElementById("shortcuts-menu");
        var notificationsMenu = document.getElementById("notifications-menu");
        shortcutsMenu.classList.remove("show");  // Hide shortcuts when showing notifications
        notificationsMenu.classList.toggle("show");
    });

    document.addEventListener("DOMContentLoaded", function () {
        // Get references to the credit bar and text elements
        var creditBar = document.getElementById("creditBar");
        var creditText = document.getElementById("creditText");

        // Function to update the credit bar
        function updateCreditBar(creditUsed) {
            creditBar.style.width = creditUsed + "%";
            creditText.innerText = creditUsed.toFixed(2) + "%"; // Display percentage with two decimal points
        }

        // Fetch user data from your API and update the bar
        fetch("/api/credits/current-user")
            .then(response => response.json())
            .then(data => {
                if (!data.hasCredits) {
                    // Redirect to the "Buy More Credits" page
                    window.location.href = "/Pages/BuyCredits";
                    return;
                }

                // Assuming `data` contains the percentage of credits used
                var creditUsed = data.usedPercentage;

                // Update the credit bar with the fetched data
                updateCreditBar(creditUsed);
            })
            .catch(error => {
                console.error("Error fetching credit data:", error);

                // Optional: Set a default value or handle the error case
                updateCreditBar(0); // Default to 0% if there's an error
            });
    });

    // Close the menus if clicked outside
    document.addEventListener("click", function (event) {
        var shortcutsMenu = document.getElementById("shortcuts-menu");
        var notificationsMenu = document.getElementById("notifications-menu");
        var appIcon = document.getElementById("app-icon");

        if (!shortcutsMenu.contains(event.target) && !appIcon.contains(event.target)) {
            shortcutsMenu.classList.remove("show");
        }
    });
</script>
