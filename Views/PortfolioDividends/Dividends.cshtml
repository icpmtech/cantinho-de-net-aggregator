@{
    ViewData["Title"] = "Portfolio Dividends";
}

@section PageStyles {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.5/css/jquery.dataTables.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.4.1/css/buttons.dataTables.min.css" />
    <!-- FullCalendar CSS (v6 injecta internamente, mas podes usar v5 se quiseres CSS externo) -->
    <!-- Se quiseres gerir manualmente, podes usar v5 assim:
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" />
    -->
    <style>
        td.details-control {
            background: url('https://www.datatables.net/examples/resources/details_open.png') no-repeat center center;
            cursor: pointer;
        }

        tr.shown td.details-control {
            background: url('https://www.datatables.net/examples/resources/details_close.png') no-repeat center center;
        }

        #loading {
            position: fixed;
            top: 40%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 1.5rem;
            display: none;
        }

        .grand-total {
            font-weight: bold;
            text-align: right;
            padding-top: 20px;
        }

        .filters {
            margin-bottom: 1rem;
        }

        #dividendModal {
            position: fixed;
            top: 20%;
            left: 50%;
            transform: translateX(-50%);
            background: white;
            padding: 1rem;
            border: 1px solid #ccc;
            display: none;
            z-index: 9999;
            width: 300px;
        }

            #dividendModal input, #dividendModal label {
                display: block;
                margin-bottom: 0.5rem;
                width: 100%;
            }

            #dividendModal .modal-buttons {
                margin-top: 1rem;
                text-align: right;
            }
        /* FullCalendar container styling */
        #calendarView {
            max-width: 900px;
            margin: 40px auto;
            display: none; /* Hidden by default */
        }
    </style>
}

<h2>Portfolio Dividends</h2>

<div class="view-toggle" style="margin-bottom: 1rem;">
    <button type="button" id="btnTableView">Table View</button>
    <button type="button" id="btnCalendarView">Calendar View</button>
</div>

<div class="filters">
    <label for="symbolFilter">Filter by Symbol:</label>
    <select id="symbolFilter"><option value="">All</option></select>

    <label style="margin-left:20px;">
        <input type="checkbox" id="hasDividendsOnly"> Only show with dividends
    </label>
</div>

<div id="loading">Loading dividends...</div>

<div id="tableViewContainer">
    <table id="stocksTable" class="display nowrap" style="width:100%; display:none;">
        <thead>
            <tr>
                <th></th>
                <th>Symbol</th>
                <th>Quantity</th>
                <th>Purchase Date</th>
                <th>Has Dividends</th>
                <th>Total Dividends (‚Ç¨)</th>
                <th>Total Value (‚Ç¨)</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <div id="grandTotal" class="grand-total"></div>
</div>

<div id="calendarView">
    <div id="calendar"></div>
</div>

<div id="dividendModal">
    <form id="dividendForm">
        <input type="hidden" id="dividendId" />
        <input type="hidden" id="portfolioItemId" />
        <input type="hidden" id="quantity" />

        <label>Symbol</label>
        <input type="text" id="symbol" readonly />

        <label>Amount (‚Ç¨)</label>
        <input type="number" id="amount" step="0.01" required />

        <label>Ex-Date</label>
        <input type="date" id="exDate" />

        <label>Payment Date</label>
        <input type="date" id="paymentDate" />

        <label>Total (‚Ç¨)</label>
        <input type="text" id="total" readonly />

        <div class="modal-buttons">
            <button type="submit">Save</button>
            <button type="button" onclick="closeModal()">Cancel</button>
        </div>
    </form>
</div>

@section PageScripts {
    <!-- jQuery & DataTables -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.html5.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <!-- FullCalendar v6 (JS injeta estilos) -->
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>

    <script>
        const fetchData = async (url, method, body=null) => {
            const res = await fetch(url, { method, headers:{'Content-Type':'application/json'}, body: body?JSON.stringify(body):null });
            return res.ok?res.json():alert('Error: '+res.statusText);
        };
        const addDividend = d=>fetchData('/api/Dividend','POST',d);
        const updateDividend = (id,d)=>fetchData(`/api/Dividend/${id}`,'PUT',d);
        const deleteDividend = id=>fetchData(`/api/Dividend/${id}`,'DELETE');

        function format(divs, itemId, sym, qty) {
            divs = divs||[];
            let html = `<button onclick="openModal(null,${itemId},'${sym}',${qty})">‚ûï Add Dividend</button>`;
            if(!divs.length) return html;
            html += `<table style="margin-top:10px;"><thead>
                        <tr><th>ID</th><th>Amount</th><th>Ex-Date</th><th>Payment Date</th><th>Total</th><th>A√ß√µes</th></tr>
                     </thead><tbody>`;
            divs.forEach(d=>{
                const amt = d.amount||0;
                html+=`<tr>
                    <td>${d.id}</td>
                    <td>${amt.toFixed(2)} ‚Ç¨</td>
                    <td>${d.exDate?new Date(d.exDate).toLocaleDateString('en-GB'):'-'}</td>
                    <td>${d.paymentDate?new Date(d.paymentDate).toLocaleDateString('en-GB'):'-'}</td>
                    <td>${(amt*qty).toFixed(2)} ‚Ç¨</td>
                    <td>
                      <button onclick='openModal(${JSON.stringify(d)},${itemId},"${sym}",${qty})'>‚úèÔ∏è</button>
                      <button onclick="deleteDividendConfirm(${d.id})">üóëÔ∏è</button>
                    </td>
                  </tr>`;
            });
            return html + '</tbody></table>';
        }

        function openModal(div=null,itemId,sym,qty){
            $('#dividendId').val(div?.id||'');
            $('#amount').val(div?.amount||'');
            $('#exDate').val(div?.exDate?div.exDate.split('T')[0]:'');
            $('#paymentDate').val(div?.paymentDate?div.paymentDate.split('T')[0]:'');
            $('#portfolioItemId').val(itemId);
            $('#symbol').val(sym);
            $('#quantity').val(qty);
            $('#total').val(div?((div.amount*qty).toFixed(2)+' ‚Ç¨'):'');
            $('#dividendModal').show();
        }
        function closeModal(){
            $('#dividendModal').hide();
            $('#dividendForm')[0].reset();
        }
        $('#amount').on('input',function(){
            const a=parseFloat(this.value)||0, q=parseFloat($('#quantity').val())||0;
            $('#total').val((a*q).toFixed(2)+' ‚Ç¨');
        });
        $('#dividendForm').on('submit',async function(e){
            e.preventDefault();
            const id=$('#dividendId').val();
            const data={
                id:id,
                portfolioItemId:$('#portfolioItemId').val(),
                symbol:$('#symbol').val(),
                amount:parseFloat($('#amount').val()),
                exDate:$('#exDate').val(),
                paymentDate:$('#paymentDate').val()
            };
            id?await updateDividend(id,data):await addDividend(data);
            closeModal(); reloadDividends();
        });
        async function deleteDividendConfirm(id){
            if(confirm('Delete this dividend?')){
                await deleteDividend(id);
                reloadDividends();
            }
        }

        function reloadDividends(){
            $('#stocksTable').DataTable().destroy();
            $('#stocksTable tbody').empty();
            $('#grandTotal').empty();
            $('#loading').show();
            $('#stocksTable').hide();
            loadDividends();
            if(calendar) calendar.refetchEvents();
        }

        function loadDividends(){
            $.getJSON('/api/PortfolioDividends', data=>{
                const grouped={}, tableArr=[], eventsArr=[];
                let grandTotal=0;
                data.forEach(d=>{
                    const key=`${d.symbol}_${d.portfolioItemId}`;
                    if(!grouped[key]) grouped[key]={symbol:d.symbol,quantity:d.quantity,purchaseDate:d.purchaseDate,dividends:[],portfolioItemId:d.portfolioItemId,totalAmount:0};
                    if(d.id!==-1){
                        grouped[key].dividends.push({id:d.id,amount:d.amount,exDate:d.exDate,paymentDate:d.paymentDate});
                        grouped[key].totalAmount+=d.amount;
                        grandTotal+=d.amount*d.quantity;
                        // Para o calend√°rio:
                        eventsArr.push({
                            id:d.id,
                            symbol:d.symbol,
                            amount:d.amount,
                            exDate:d.exDate,
                            paymentDate:d.paymentDate,
                            quantity:d.quantity,
                            portfolioItemId:d.portfolioItemId
                        });
                    }
                });
                Object.values(grouped).forEach(obj=>tableArr.push(obj));

                // Preenche filtro
                $('#symbolFilter').empty().append(`<option value="">All</option>`);
                [...new Set(tableArr.map(x=>x.symbol))].forEach(sym=>$('#symbolFilter').append(`<option value="${sym}">${sym}</option>`));

                // Inicializa DataTable
                const table = $('#stocksTable').DataTable({
                    data: tableArr,
                    columns:[
                        {className:'details-control',orderable:false,data:null,defaultContent:''},
                        {data:'symbol'},{data:'quantity'},
                        {data:'purchaseDate',render:d=>d?new Date(d).toLocaleDateString('en-GB'):'-'},
                        {data:'dividends',render:d=>d&&d.length?'‚úîÔ∏è':'‚ùå',orderable:false},
                        {data:'totalAmount',render:d=>d.toFixed(2)+' ‚Ç¨'},
                        {data:null,render:d=>(d.totalAmount*d.quantity).toFixed(2)+' ‚Ç¨',orderable:false}
                    ],
                    dom:'Bfrtip',
                    buttons:[{
                        extend:'csvHtml5',
                        text:'Export CSV',
                        title:'Portfolio_Dividends',
                        customize:csv=>csv+`\nGrand Total,,${grandTotal.toFixed(2)} ‚Ç¨`
                    }],
                    order:[[1,'asc']],pageLength:10
                });
                $('#stocksTable tbody').on('click','td.details-control',function(){
                    const tr=$(this).closest('tr'), row=table.row(tr), d=row.data();
                    if(row.child.isShown()){
                        row.child.hide(); tr.removeClass('shown');
                    } else {
                        row.child(format(d.dividends,d.portfolioItemId,d.symbol,d.quantity)).show(); tr.addClass('shown');
                    }
                });
                $('#symbolFilter').on('change',function(){
                    table.column(1).search(this.value).draw();
                });
                $('#hasDividendsOnly').on('change',function(){
                    table.column(4).search(this.checked?'‚úîÔ∏è':'').draw();
                });
                $('#loading').hide();
                $('#stocksTable').show();
                $('#grandTotal').html(`üí∞ <strong>Grand Total: ${grandTotal.toFixed(2)} ‚Ç¨</strong>`);

                // Guarda eventos para o calend√°rio (usado em initCalendar)
                window._fcEvents = eventsArr;
            });
        }

        // FullCalendar
        let calendar;
        function initCalendar(){
            const calEl=document.getElementById('calendar');
            calendar=new FullCalendar.Calendar(calEl,{
                initialView:'dayGridMonth',
                headerToolbar:{left:'prev,next today',center:'title',right:'dayGridMonth,timeGridWeek,listWeek'},
                loading(isLoading){
                    document.getElementById('loading').style.display = isLoading?'block':'none';
                },
                events(fetchInfo, success,failure){
                    const evts = window._fcEvents.map(d=>({
                        id:d.id,
                        title:`${d.symbol}: ${d.amount.toFixed(2)}‚Ç¨`,
                        start:d.paymentDate, allDay:true,
                        extendedProps:{...d}
                    }));
                    success(evts);
                },
                eventClick(info){
                    const d = info.event.extendedProps;
                    openModal({ id: d.id, amount: d.amount, exDate: d.exDate, paymentDate: d.paymentDate },
                              d.portfolioItemId, d.symbol, d.quantity);
                }
            });
            calendar.render();
        }

        $('#btnTableView').on('click',()=>{
            $('#calendarView').hide();
            $('#tableViewContainer').show();
        });
        $('#btnCalendarView').on('click',()=>{
            $('#tableViewContainer').hide();
            $('#calendarView').show();
            if(!calendar) initCalendar();
            else calendar.refetchEvents();
        });

        $(document).ready(()=>loadDividends());
    </script>
}
