    <div class="row" id="portfolioCards"></div>
<script>
    const fetchPortfolio = async () => {
        const portfolioApiUrl = `/api/Portfolio`; // Replace with your actual API endpoint
        try {
            const response = await fetch(portfolioApiUrl);
            const data = await response.json();

            // Group items by symbol
            const groupedItems = {};
            data[0].items.forEach(item => {
                if (!groupedItems[item.symbol]) {
                    groupedItems[item.symbol] = [];
                }
                groupedItems[item.symbol].push(item);
            });

            // Fetch historical data for each unique symbol
            for (const symbol in groupedItems) {
                await fetchHistoricalData(symbol);
            }
        } catch (error) {
            console.error('Error fetching portfolio data:', error);
           
        }
    };

    const fetchHistoricalData = async (symbol) => {
        const startDate = new Date(new Date().setFullYear(new Date().getFullYear() - 1)).toISOString().split('T')[0]; // One year ago
        const endDate = new Date().toISOString().split('T')[0]; // Today
        const interval = '1mo'; // Adjust as needed
        const apiUrl = `/api/YahooFinancev1/GetHistoricalData?symbol=${encodeURIComponent(symbol)}&startDate=${encodeURIComponent(startDate)}&endDate=${encodeURIComponent(endDate)}&interval=${encodeURIComponent(interval)}`;

        try {
            const response = await fetch(apiUrl);
            const data = await response.json();

            try {
                const metaData = data.chart.result[0].meta;

                // Create and display the stock info card
                createStockInfoCard(metaData);
            } catch (error) {
                console.error(`Error processing data for symbol ${symbol}:`, error);
            }
        } catch (error) {
            console.error(`Error fetching historical data for symbol ${symbol}:`, error);
          
        }
    };

    const createStockInfoCard = (metaData) => {
        const stockInfoContainer = document.getElementById('portfolioCards');

        // Bootstrap responsive column
        const stockCardColumn = document.createElement('div');
        stockCardColumn.className = 'col-12 col-sm-6 col-md-4 col-lg-3 mb-4';

        // Stock card
        const stockCard = document.createElement('div');
        stockCard.innerHTML = `
           <div class="card shadow-sm mb-4">
    <div class="card-header  d-flex justify-content-between align-items-center">
        <h5 class="card-title mb-0 d-flex align-items-center">
            <i class='bx bxs-bar-chart me-2'></i>
            ${metaData.longName} (${metaData.symbol})
        </h5>
    </div>
    <div class="card-body">
        <div class="row mb-3">
            <div class="col-md-6">
                <p class="card-text">
                    <i class='bx bx-buildings me-2 text-primary'></i>
                    <strong>Exchange:</strong> ${metaData.exchangeName}
                </p>
                <p class="card-text">
                    <i class='bx bx-detail me-2 text-primary'></i>
                    <strong>Full Exchange Name:</strong> ${metaData.fullExchangeName}
                </p>
                <p class="card-text">
                    <i class='bx bx-pie-chart-alt-2 me-2 text-primary'></i>
                    <strong>Instrument Type:</strong> ${metaData.instrumentType}
                </p>
            </div>
            <div class="col-md-6">
                <p class="card-text">
                    <i class='bx bx-money me-2 text-success'></i>
                    <strong>Currency:</strong> ${metaData.currency}
                </p>
                <p class="card-text">
                    <i class='bx bx-up-arrow-circle me-2 text-danger'></i>
                    <strong>52 Week High:</strong> €${metaData.fiftyTwoWeekHigh}
                </p>
                <p class="card-text">
                    <i class='bx bx-down-arrow-circle me-2 text-warning'></i>
                    <strong>52 Week Low:</strong> €${metaData.fiftyTwoWeekLow}
                </p>
            </div>
        </div>
        <hr>
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <p class="card-text mb-0">
                    <i class='bx bx-dollar-circle me-2 text-info'></i>
                    <strong>Regular Market Price:</strong> €${metaData.regularMarketPrice}
                </p>
                <p class="card-text mb-0">
                    <i class='bx bx-bar-chart-alt-2 me-2 text-info'></i>
                    <strong>Regular Market Volume:</strong> ${metaData.regularMarketVolume}
                </p>
            </div>
            <a href="/SentimentAnalizer/SearchSymbols" class="btn btn-outline-primary btn-sm">
                <i class='bx bx-line-chart me-1'></i> View Chart
            </a>
        </div>
    </div>
</div>
        `;

        stockCardColumn.appendChild(stockCard);
        stockInfoContainer.appendChild(stockCardColumn);
    };

    // Load portfolio cards and data on page load
    fetchPortfolio();
</script>
