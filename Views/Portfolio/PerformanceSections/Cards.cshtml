    <div class="row" id="portfolioCards"></div>
<script>
    const fetchPortfolio = async () => {
        const portfolioApiUrl = `/api/Portfolio`; // Replace with your actual API endpoint
        try {
            const response = await fetch(portfolioApiUrl);
            const data = await response.json();

            // Group items by symbol
            const groupedItems = {};
            data[0].items.forEach(item => {
                if (!groupedItems[item.symbol]) {
                    groupedItems[item.symbol] = [];
                }
                groupedItems[item.symbol].push(item);
            });

            // Fetch historical data for each unique symbol
            for (const symbol in groupedItems) {
                await fetchHistoricalData(symbol);
            }
        } catch (error) {
            console.error('Error fetching portfolio data:', error);
            alert('Failed to fetch portfolio data.');
        }
    };

    const fetchHistoricalData = async (symbol) => {
        const startDate = new Date(new Date().setFullYear(new Date().getFullYear() - 1)).toISOString().split('T')[0]; // One year ago
        const endDate = new Date().toISOString().split('T')[0]; // Today
        const interval = '1mo'; // Adjust as needed
        const apiUrl = `/api/YahooFinancev1/GetHistoricalData?symbol=${encodeURIComponent(symbol)}&startDate=${encodeURIComponent(startDate)}&endDate=${encodeURIComponent(endDate)}&interval=${encodeURIComponent(interval)}`;

        try {
            const response = await fetch(apiUrl);
            const data = await response.json();

            try {
                const metaData = data.chart.result[0].meta;

                // Create and display the stock info card
                createStockInfoCard(metaData);
            } catch (error) {
                console.error(`Error processing data for symbol ${symbol}:`, error);
            }
        } catch (error) {
            console.error(`Error fetching historical data for symbol ${symbol}:`, error);
            alert(`Failed to fetch historical data for symbol ${symbol}.`);
        }
    };

    const createStockInfoCard = (metaData) => {
        const stockInfoContainer = document.getElementById('portfolioCards');

        // Bootstrap responsive column
        const stockCardColumn = document.createElement('div');
        stockCardColumn.className = 'col-12 col-sm-6 col-md-4 col-lg-3 mb-4';

        // Stock card
        const stockCard = document.createElement('div');
        stockCard.className = 'card shadow-sm h-100';

        stockCard.innerHTML = `
            <div class="card-body">
                <h5 class="card-title">${metaData.longName} (${metaData.symbol})</h5>
                <p class="card-text"><strong>Exchange:</strong> ${metaData.exchangeName}</p>
                <p class="card-text"><strong>Currency:</strong> ${metaData.currency}</p>
                <p class="card-text"><strong>52 Week High:</strong> €${metaData.fiftyTwoWeekHigh}</p>
                <p class="card-text"><strong>52 Week Low:</strong> €${metaData.fiftyTwoWeekLow}</p>
                <p class="card-text"><strong>Regular Market Price:</strong> €${metaData.regularMarketPrice}</p>
            </div>
        `;

        stockCardColumn.appendChild(stockCard);
        stockInfoContainer.appendChild(stockCardColumn);
    };

    // Load portfolio cards and data on page load
    fetchPortfolio();
</script>
